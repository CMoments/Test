//为了尽可能节约水，本题只有3种倒水方式：
//1、给当前客人倒水a毫升，使得总好感度增加b
//2、给当前客人倒水c毫升(c>a)，使得总好感度增加d
//3、不给客人倒水(对应题目中的倒水小于a毫升，倒与不倒是一样的，还不如不倒)，总好感度增加e 
#include <bits/stdc++.h>

using namespace std;

typedef long long ll;

ll dp[1005];//dp[i][j]表示只考虑前i个客人，共倒水j毫升所得的最大好感度 
//易知对于第i个客人，给其倒水所得好感度的多少只与前i-1个客人有关 

int main()
{
	int N,M;
	cin>>N>>M;
	for(int i=1;i<=N;i++)//分别考虑前1~N个客人 
	{
		ll a,b,c,d,e;
		cin>>a>>b>>c>>d>>e;
		for(int j=M;j>=0;j--)//对第i个客人，分别考虑共倒0~M毫升水 
		{
			//若当前拥有的水小于a，干脆不倒水，好感度为前i-1个客人共倒j升水所得好感度 加上e 
			if(j<a)dp[j]=dp[j]+e;
			//若当前拥有的水不小于a但是小于c，则可以选择倒a毫升或者不倒水
			//若倒a毫升水，则好感度为 前i-1个客人共倒j-a毫升水所得好感度 加上b
			//若不倒水，则好感度为 前i-1个客人共倒j毫升水所得好感度 加上e
			//二者取较大值即可 
			else if(j>=a&&j<c)dp[j]=max(dp[j-a]+b,dp[j]+e);
			//若当前拥有的水足够多，依次考虑三种情况，同理可得 
			else dp[j]=max(dp[j-a]+b,max(dp[j-c]+d,dp[j]+e));
		}
	}
	cout<<dp[M]<<endl;//考虑前N个客人，共倒M毫升水所得好感度的最大值 即为最终答案 
	return 0;
}
